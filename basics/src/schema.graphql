type Query {
    posts(query: String): [Post!]!
    users(query: String): [User!]!
    comments: [Comment!]!
    me: User!
    post: Post!
}

type Mutation {
    createUser(data: CreateUserInput!): User!
    deleteUser(id: ID!): User!
    createPost(data: CreatePostInput!): Post!
    deletePost(id: ID!): Post!
    createComment(data: CreateCommentInput!): Comment!
    deleteComment(id: ID!): Comment!
}

type User {
    id: ID!
    name: String!
    email: String!
    age: Int
    posts: [Post!]!
    comments: [Comment!]!
}
input CreateUserInput {
    name: String!
    email: String!
    age: Int
}

type Post {
    id: ID!
    title: String!
    body: String!
    published: Boolean!
    author: User!
    comments: [Comment!]!
}
input CreatePostInput {
    title: String!
    body: String!
    published: Boolean!
    author: ID!
}

type Comment {
    id: ID!
    text: String!
    author: User!
    post: Post!
}
input CreateCommentInput {
    text: String!
    author: ID!
    post: ID!
}
